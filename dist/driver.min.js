!(function (t, e) { typeof exports === 'object' && typeof module === 'object' ? module.exports = e() : typeof define === 'function' && define.amd ? define([], e) : typeof exports === 'object' ? exports.Driver = e() : t.Driver = e(); }(window, () => (function (t) { const e = {}; function i(n) { if (e[n]) return e[n].exports; const o = e[n] = { i: n, l: !1, exports: {} }; return t[n].call(o.exports, o, o.exports, i), o.l = !0, o.exports; } return i.m = t, i.c = e, i.d = function (t, e, n) { i.o(t, e) || Object.defineProperty(t, e, { configurable: !1, enumerable: !0, get: n }); }, i.r = function (t) { Object.defineProperty(t, '__esModule', { value: !0 }); }, i.n = function (t) { const e = t && t.__esModule ? function () { return t.default; } : function () { return t; }; return i.d(e, 'a', e), e; }, i.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e); }, i.p = '/dist/', i(i.s = 10); }([function (t, e, i) {
  Object.defineProperty(e, '__esModule', { value: !0 }); e.OVERLAY_OPACITY = 0.75, e.OVERLAY_PADDING = 10, e.SHOULD_ANIMATE_OVERLAY = !0, e.SHOULD_OUTSIDE_CLICK_CLOSE = !0, e.ESC_KEY_CODE = 27, e.LEFT_KEY_CODE = 37, e.RIGHT_KEY_CODE = 39; let n = e.ID_OVERLAY = 'driver-page-overlay',
    o = e.ID_STAGE = 'driver-highlighted-element-stage',
    s = e.ID_POPOVER = 'driver-popover-item',
    r = (e.CLASS_DRIVER_HIGHLIGHTED_ELEMENT = 'driver-highlighted-element', e.CLASS_POSITION_RELATIVE = 'driver-position-relative', e.CLASS_FIX_STACKING_CONTEXT = 'driver-fix-stacking', e.CLASS_NO_ANIMATION = 'driver-no-animation', e.CLASS_POPOVER_TIP = 'driver-popover-tip'),
    h = e.CLASS_POPOVER_TITLE = 'driver-popover-title',
    l = e.CLASS_POPOVER_DESCRIPTION = 'driver-popover-description',
    a = e.CLASS_POPOVER_FOOTER = 'driver-popover-footer',
    d = e.CLASS_CLOSE_BTN = 'driver-close-btn',
    u = e.CLASS_NEXT_STEP_BTN = 'driver-next-btn',
    c = e.CLASS_PREV_STEP_BTN = 'driver-prev-btn'; e.CLASS_BTN_DISABLED = 'driver-disabled', e.ANIMATION_DURATION_MS = 400, e.POPOVER_HTML = `\n  <div id="${s}">\n    <div class="${r}"></div>\n    <div class="${h}">Popover Title</div>\n    <div class="${l}">Popover Description</div>\n    <div class="${a}">\n      <button class="${d}">Close</button>\n      <span class="driver-btn-group">\n        <button class="${c}">&larr; Previous</button>\n        <button class="${u}">Next &rarr;</button>\n      </span>\n    </div>\n  </div>`, e.OVERLAY_HTML = `<div id="${n}"></div>`, e.STAGE_HTML = `<div id="${o}"></div>`;
}, function (t, e, i) {
  Object.defineProperty(e, '__esModule', { value: !0 }); e.createNodeFromString = function (t) { const e = document.createElement('div'); return e.innerHTML = t.trim(), e.firstChild; }, e.getStyleProperty = function t(e, i) { if (arguments.length > 2 && void 0 !== arguments[2] && arguments[2]) { for (let n = ['', '-webkit-', '-ms-', 'moz-', '-o-'], o = 0; o < n.length; o++) { const s = t(e, n[o] + i); if (s) return s; } return ''; } let r = ''; return e.currentStyle ? r = e.currentStyle[i] : document.defaultView && document.defaultView.getComputedStyle && (r = document.defaultView.getComputedStyle(e, null).getPropertyValue(i)), r && r.toLowerCase ? r.toLowerCase() : r; };
}, function (t, e, i) {
  Object.defineProperty(e, '__esModule', { value: !0 }); let n,
    o = (function () { function t(t, e) { for (let i = 0; i < e.length; i++) { const n = e[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(t, n.key, n); } } return function (e, i, n) { return i && t(e.prototype, i), n && t(e, n), e; }; }()),
    s = i(0),
    r = i(1),
    h = i(6),
    l = (n = h) && n.__esModule ? n : { default: n }; const a = (function () {
    function t() {
      let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
        i = e.node,
        n = e.options,
        o = e.popover,
        s = e.stage,
        r = e.overlay,
        h = e.window,
        l = e.document; !(function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, t)), this.node = i, this.document = l, this.window = h, this.options = n, this.overlay = r, this.popover = o, this.stage = s, this.animationTimeout = null;
    } return o(t, [{ key: 'isInView', value() { for (var t = this.node.offsetTop, e = this.node.offsetLeft, i = this.node.offsetWidth, n = this.node.offsetHeight, o = this.node; o.offsetParent;)t += (o = o.offsetParent).offsetTop, e += o.offsetLeft; return t >= this.window.pageYOffset && e >= this.window.pageXOffset && t + n <= this.window.pageYOffset + this.window.innerHeight && e + i <= this.window.pageXOffset + this.window.innerWidth; } }, { key: 'scrollManually', value() { const t = this.node.getBoundingClientRect().top + this.window.pageYOffset - this.window.innerHeight / 2; this.window.scrollTo(0, t); } }, { key: 'bringInView', value() { if (!this.isInView()) if (this.node.scrollIntoView) try { this.node.scrollIntoView(this.options.scrollIntoViewOptions || { behavior: 'instant', block: 'center' }); } catch (t) { this.scrollManually(); } else this.scrollManually(); } }, {
      key: 'getCalculatedPosition',
      value() {
        let t = this.document.body,
          e = this.document.documentElement,
          i = this.window,
          n = this.window.pageYOffset || e.scrollTop || t.scrollTop,
          o = i.pageXOffset || e.scrollLeft || t.scrollLeft,
          s = this.node.getBoundingClientRect(); return new l.default({
          top: s.top + n, left: s.left + o, right: s.left + o + s.width, bottom: s.top + n + s.height,
        });
      },
    }, { key: 'onDeselected', value() { const t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; this.hidePopover(), t && this.hideStage(), this.removeHighlightClasses(), this.window.clearTimeout(this.animationTimeout), this.options.onDeselected && this.options.onDeselected(this); } }, { key: 'isSame', value(t) { return !(!t || !t.node) && t.node === this.node; } }, { key: 'onHighlightStarted', value() { this.options.onHighlightStarted && this.options.onHighlightStarted(this); } }, { key: 'onHighlighted', value() { this.showPopover(), this.showStage(), this.addHighlightClasses(); const t = this.popover; t && !t.isInView() && t.bringInView(), this.isInView() || this.bringInView(), this.options.onHighlighted && this.options.onHighlighted(this); } }, { key: 'removeHighlightClasses', value() { this.node.classList.remove(s.CLASS_DRIVER_HIGHLIGHTED_ELEMENT), this.node.classList.remove(s.CLASS_POSITION_RELATIVE), this.document.querySelectorAll(`.${s.CLASS_FIX_STACKING_CONTEXT}`).forEach((t) => { t.classList.remove(s.CLASS_FIX_STACKING_CONTEXT); }); } }, { key: 'addHighlightClasses', value() { this.node.classList.add(s.CLASS_DRIVER_HIGHLIGHTED_ELEMENT), this.canMakeRelative() && this.node.classList.add(s.CLASS_POSITION_RELATIVE), this.fixStackingContext(); } }, {
      key: 'fixStackingContext',
      value() {
        for (let t = this.node.parentNode; t && t.tagName && t.tagName.toLowerCase() !== 'body';) {
          let e = (0, r.getStyleProperty)(t, 'z-index'),
            i = parseFloat((0, r.getStyleProperty)(t, 'opacity')),
            n = (0, r.getStyleProperty)(t, 'transform', !0),
            o = (0, r.getStyleProperty)(t, 'filter', !0),
            h = (0, r.getStyleProperty)(t, 'perspective', !0); (/[0-9]+/.test(e) || i < 1 || n && n !== 'none' || o && o !== 'none' || h && h !== 'none') && t.classList.add(s.CLASS_FIX_STACKING_CONTEXT), t = t.parentNode;
        }
      },
    }, { key: 'canMakeRelative', value() { const t = this.getStyleProperty('position'); return ['absolute', 'fixed', 'relative'].indexOf(t) === -1; } }, { key: 'getStyleProperty', value(t) { return (0, r.getStyleProperty)(this.node, t); } }, { key: 'showStage', value() { this.stage.show(this.getCalculatedPosition()); } }, { key: 'getNode', value() { return this.node; } }, { key: 'hideStage', value() { this.stage.hide(); } }, { key: 'hidePopover', value() { this.popover && this.popover.hide(); } }, {
      key: 'showPopover',
      value() {
        const t = this; if (this.popover) {
          let e = this.getCalculatedPosition(),
            i = s.ANIMATION_DURATION_MS; this.options.animate && this.overlay.lastHighlightedElement || (i = 0), this.animationTimeout = this.window.setTimeout(() => { t.popover.show(e); }, i);
        }
      },
    }, {
      key: 'getFullPageSize',
      value() {
        let t = this.document.body,
          e = this.document.documentElement; return { height: Math.max(t.scrollHeight, t.offsetHeight, e.scrollHeight, e.offsetHeight), width: Math.max(t.scrollWidth, t.offsetWidth, e.scrollWidth, e.offsetWidth) };
      },
    }, { key: 'getSize', value() { return { height: Math.max(this.node.scrollHeight, this.node.offsetHeight), width: Math.max(this.node.scrollWidth, this.node.offsetWidth) }; } }]), t;
  }()); e.default = a, t.exports = e.default;
}, function (t, e, i) {
  Object.defineProperty(e, '__esModule', { value: !0 }); let n,
    o = (function () { function t(t, e) { for (let i = 0; i < e.length; i++) { const n = e[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(t, n.key, n); } } return function (e, i, n) { return i && t(e.prototype, i), n && t(e, n), e; }; }()),
    s = i(0),
    r = i(1),
    h = i(2),
    l = (n = h) && n.__esModule ? n : { default: n }; const a = (function (t) {
    function e(t, i, n) { !(function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, e)); const o = (function (t, e) { if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !e || typeof e !== 'object' && typeof e !== 'function' ? t : e; }(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this))); return o.options = t, o.window = i, o.document = n, o; } return (function (t, e) {
      if (typeof e !== 'function' && e !== null) throw new TypeError(`Super expression must either be null or a function, not ${typeof e}`); t.prototype = Object.create(e && e.prototype, {
        constructor: {
          value: t, enumerable: !1, writable: !0, configurable: !0,
        },
      }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
    }(e, l.default)), o(e, [{ key: 'makeNode', value() { let t = this.document.getElementById(s.ID_STAGE); t || (t = (0, r.createNodeFromString)(s.STAGE_HTML), document.body.appendChild(t)), this.node = t, this.options.animate ? this.node.classList.remove(s.CLASS_NO_ANIMATION) : this.node.classList.add(s.CLASS_NO_ANIMATION); } }, { key: 'hide', value() { this.node && this.node.parentElement && this.node.parentElement.removeChild(this.node); } }, { key: 'setInitialStyle', value() { this.node.style.display = 'block', this.node.style.left = '0', this.node.style.top = '0', this.node.style.bottom = '', this.node.style.right = ''; } }, {
      key: 'show',
      value(t) {
        this.makeNode(), this.setInitialStyle(); let e = 2 * this.options.padding,
          i = t.right - t.left + e,
          n = t.bottom - t.top + e; this.node.style.display = 'block', this.node.style.position = 'absolute', this.node.style.width = `${i}px`, this.node.style.height = `${n}px`, this.node.style.top = `${t.top - e / 2}px`, this.node.style.left = `${t.left - e / 2}px`, this.node.style.backgroundColor = this.options.stageBackground;
      },
    }]), e;
  }()); e.default = a, t.exports = e.default;
}, function (t, e, i) {
  !(function () {
    for (var t = 0, e = ['ms', 'moz', 'webkit', 'o'], i = 0; i < e.length && !window.requestAnimationFrame; ++i)window.requestAnimationFrame = window[`${e[i]}RequestAnimationFrame`], window.cancelAnimationFrame = window[`${e[i]}CancelAnimationFrame`] || window[`${e[i]}CancelRequestAnimationFrame`]; window.requestAnimationFrame || (window.requestAnimationFrame = function (e) {
      let i = (new Date()).getTime(),
        n = Math.max(0, 16 - (i - t)),
        o = window.setTimeout(() => { e(i + n); }, n); return t = i + n, o;
    }), window.cancelAnimationFrame || (window.cancelAnimationFrame = function (t) { clearTimeout(t); });
  }());
}, function (t, e, i) {
  Object.defineProperty(e, '__esModule', { value: !0 }); let n,
    o = Object.assign || function (t) { for (let e = 1; e < arguments.length; e++) { const i = arguments[e]; for (const n in i)Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]); } return t; },
    s = (function () { function t(t, e) { for (let i = 0; i < e.length; i++) { const n = e[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(t, n.key, n); } } return function (e, i, n) { return i && t(e.prototype, i), n && t(e, n), e; }; }()),
    r = i(2),
    h = (n = r) && n.__esModule ? n : { default: n },
    l = i(0),
    a = i(1); const d = (function (t) {
    function e(t, i, n) {
      !(function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, e)); const s = (function (t, e) { if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !e || typeof e !== 'object' && typeof e !== 'function' ? t : e; }(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this))); return s.options = o({
        isFirst: !0, isLast: !0, totalCount: 1, currentIndex: 0, showButtons: !0, closeBtnText: 'Close', doneBtnText: 'Done', startBtnText: 'Next &rarr;', nextBtnText: 'Next &rarr;', prevBtnText: '&larr; Previous',
      }, t), s.window = i, s.document = n, s.makeNode(), s.hide(), s;
    } return (function (t, e) {
      if (typeof e !== 'function' && e !== null) throw new TypeError(`Super expression must either be null or a function, not ${typeof e}`); t.prototype = Object.create(e && e.prototype, {
        constructor: {
          value: t, enumerable: !1, writable: !0, configurable: !0,
        },
      }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
    }(e, h.default)), s(e, [{ key: 'makeNode', value() { let t = this.document.getElementById(l.ID_POPOVER); t || (t = (0, a.createNodeFromString)(l.POPOVER_HTML), document.body.appendChild(t)), this.node = t, this.tipNode = t.querySelector(`.${l.CLASS_POPOVER_TIP}`), this.titleNode = t.querySelector(`.${l.CLASS_POPOVER_TITLE}`), this.descriptionNode = t.querySelector(`.${l.CLASS_POPOVER_DESCRIPTION}`), this.footerNode = t.querySelector(`.${l.CLASS_POPOVER_FOOTER}`), this.nextBtnNode = t.querySelector(`.${l.CLASS_NEXT_STEP_BTN}`), this.prevBtnNode = t.querySelector(`.${l.CLASS_PREV_STEP_BTN}`), this.closeBtnNode = t.querySelector(`.${l.CLASS_CLOSE_BTN}`); } }, { key: 'hide', value() { this.node.style.display = 'none'; } }, { key: 'setInitialState', value() { this.node.style.display = 'block', this.node.style.left = '0', this.node.style.top = '0', this.node.style.bottom = '', this.node.style.right = '', this.node.querySelector(`.${l.CLASS_POPOVER_TIP}`).className = l.CLASS_POPOVER_TIP; } }, { key: 'show', value(t) { switch (this.setInitialState(), this.titleNode.innerHTML = this.options.title, this.descriptionNode.innerHTML = this.options.description, this.renderButtons(), this.options.position) { case 'left': this.positionOnLeft(t); break; case 'right': this.positionOnRight(t); break; case 'top': this.positionOnTop(t); break; case 'bottom': this.positionOnBottom(t); break; case 'auto': default: this.autoPosition(t); } } }, { key: 'renderButtons', value() { this.nextBtnNode.innerHTML = this.options.nextBtnText, this.prevBtnNode.innerHTML = this.options.prevBtnText, this.closeBtnNode.innerHTML = this.options.closeBtnText, this.options.showButtons && this.options.totalCount && this.options.totalCount !== 1 ? (this.footerNode.style.display = 'block', this.options.isFirst ? (this.prevBtnNode.classList.add(l.CLASS_BTN_DISABLED), this.nextBtnNode.innerHTML = this.options.startBtnText) : this.prevBtnNode.classList.remove(l.CLASS_BTN_DISABLED), this.options.isLast ? this.nextBtnNode.innerHTML = this.options.doneBtnText : this.nextBtnNode.innerHTML = this.options.nextBtnText) : this.footerNode.style.display = 'none'; } }, {
      key: 'positionOnLeft',
      value(t) {
        let e = this.getSize().width,
          i = this.options.padding + 10; this.node.style.left = `${t.left - e - i}px`, this.node.style.top = `${t.top - this.options.padding}px`, this.node.style.right = '', this.node.style.bottom = '', this.tipNode.classList.add('right');
      }, 
    }, { key: 'positionOnRight', value(t) { const e = this.options.padding + 10; this.node.style.left = `${t.right + e}px`, this.node.style.top = `${t.top - this.options.padding}px`, this.node.style.right = '', this.node.style.bottom = '', this.tipNode.classList.add('left'); } }, {
      key: 'positionOnTop',
      value(t) {
        let e = this.getSize().height,
          i = this.options.padding + 10; this.node.style.top = `${t.top - e - i}px`, this.node.style.left = `${t.left - this.options.padding}px`, this.node.style.right = '', this.node.style.bottom = '', this.tipNode.classList.add('bottom');
      },
    }, { key: 'positionOnBottom', value(t) { const e = this.options.padding + 10; this.node.style.top = `${t.bottom + e}px`, this.node.style.left = `${t.left - this.options.padding}px`, this.node.style.right = '', this.node.style.bottom = '', this.tipNode.classList.add('top'); } }, {
      key: 'autoPosition',
      value(t) {
        let e = this.getFullPageSize(),
          i = this.getSize(),
          n = e.height,
          o = i.height,
          s = this.options.padding + 10; t.bottom + o + s >= n ? this.positionOnTop(t) : this.positionOnBottom(t);
      },
    }]), e;
  }()); e.default = d, t.exports = e.default;
}, function (t, e, i) {
  Object.defineProperty(e, '__esModule', { value: !0 }); const n = (function () { function t(t, e) { for (let i = 0; i < e.length; i++) { const n = e[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(t, n.key, n); } } return function (e, i, n) { return i && t(e.prototype, i), n && t(e, n), e; }; }()); const o = (function () {
    function t() {
      let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
        i = e.left,
        n = void 0 === i ? 0 : i,
        o = e.top,
        s = void 0 === o ? 0 : o,
        r = e.right,
        h = void 0 === r ? 0 : r,
        l = e.bottom,
        a = void 0 === l ? 0 : l; !(function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, t)), this.left = n, this.right = h, this.top = s, this.bottom = a;
    } return n(t, [{ key: 'canHighlight', value() { return this.left < this.right && this.top < this.bottom; } }, { key: 'equals', value(t) { return Math.round(this.left) === Math.round(t.left) && Math.round(this.right) === Math.round(t.right) && Math.round(this.top) === Math.round(t.top) && Math.round(this.bottom) === Math.round(t.bottom); } }]), t;
  }()); e.default = o, t.exports = e.default;
}, function (t, e, i) {
  Object.defineProperty(e, '__esModule', { value: !0 }); let n = (function () { function t(t, e) { for (let i = 0; i < e.length; i++) { const n = e[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(t, n.key, n); } } return function (e, i, n) { return i && t(e.prototype, i), n && t(e, n), e; }; }()),
    o = i(0),
    s = i(1); const r = (function () { function t(e, i, n) { !(function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, t)), this.options = e, this.highlightedElement = null, this.lastHighlightedElement = null, this.hideTimer = null, this.window = i, this.document = n, this.removeNode = this.removeNode.bind(this); } return n(t, [{ key: 'makeNode', value() { let t = this.document.getElementById(o.ID_OVERLAY); t || (t = (0, s.createNodeFromString)(o.OVERLAY_HTML), document.body.appendChild(t)), this.node = t, this.node.style.opacity = '0', this.options.animate ? this.node.classList.remove(o.CLASS_NO_ANIMATION) : this.node.classList.add(o.CLASS_NO_ANIMATION); } }, { key: 'highlight', value(t) { t && t.node ? t.isSame(this.highlightedElement) || (this.window.clearTimeout(this.hideTimer), t.onHighlightStarted(), this.highlightedElement && !this.highlightedElement.isSame(this.lastHighlightedElement) && this.highlightedElement.onDeselected(), t.getCalculatedPosition().canHighlight() && (this.lastHighlightedElement = this.highlightedElement, this.highlightedElement = t, this.show(), this.highlightedElement.onHighlighted())) : console.warn('Invalid element to highlight. Must be an instance of `Element`'); } }, { key: 'show', value() { const t = this; this.node && this.node.parentElement || (this.makeNode(), window.setTimeout(() => { t.node.style.opacity = `${  t.options.opacity}`, t.node.style.position = 'fixed', t.node.style.left = '0', t.node.style.top = '0', t.node.style.bottom = '0', t.node.style.right = '0'; })); } }, { key: 'getHighlightedElement', value() { return this.highlightedElement; } }, { key: 'getLastHighlightedElement', value() { return this.lastHighlightedElement; } }, { key: 'clear', value() { const t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; if (this.highlightedElement) { this.highlightedElement.onDeselected(!0); } this.highlightedElement = null, this.lastHighlightedElement = null, this.node && (this.window.clearTimeout(this.hideTimer), this.options.animate && !t ? (this.node.style.opacity = '0', this.hideTimer = this.window.setTimeout(this.removeNode, o.ANIMATION_DURATION_MS)) : this.removeNode()); } }, { key: 'removeNode', value() { this.node && this.node.parentElement && this.node.parentElement.removeChild(this.node); } }, { key: 'refresh', value() { this.highlightedElement && (this.highlightedElement.showPopover(), this.highlightedElement.showStage()); } }]), t; }()); e.default = r, t.exports = e.default;
}, function (t, e, i) {
  Object.defineProperty(e, '__esModule', { value: !0 }); let n = Object.assign || function (t) { for (let e = 1; e < arguments.length; e++) { const i = arguments[e]; for (const n in i)Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]); } return t; },
    o = (function () { function t(t, e) { for (let i = 0; i < e.length; i++) { const n = e[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(t, n.key, n); } } return function (e, i, n) { return i && t(e.prototype, i), n && t(e, n), e; }; }()),
    s = d(i(7)),
    r = d(i(2)),
    h = d(i(5)); i(4); let l = i(0),
    a = d(i(3)); function d(t) { return t && t.__esModule ? t : { default: t }; } const u = (function () {
    function t() {
      const e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; !(function (t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); }(this, t)), this.options = n({
        animate: l.SHOULD_ANIMATE_OVERLAY, opacity: l.OVERLAY_OPACITY, padding: l.OVERLAY_PADDING, scrollIntoViewOptions: null, allowClose: l.SHOULD_OUTSIDE_CLICK_CLOSE, stageBackground: '#ffffff', onHighlightStarted() {}, onHighlighted() {}, onDeselected() {},
      }, e), this.document = document, this.window = window, this.isActivated = !1, this.steps = [], this.currentStep = 0, this.overlay = new s.default(this.options, window, document), this.onResize = this.onResize.bind(this), this.onKeyUp = this.onKeyUp.bind(this), this.onClick = this.onClick.bind(this), this.bind();
    } return o(t, [{ key: 'bind', value() { this.window.addEventListener('resize', this.onResize, !1), this.window.addEventListener('keyup', this.onKeyUp, !1), this.window.addEventListener('click', this.onClick, !1); } }, {
      key: 'onClick',
      value(t) {
        if (this.isActivated && this.hasHighlightedElement()) {
          let e = this.overlay.getHighlightedElement(),
            i = this.document.getElementById(l.ID_POPOVER),
            n = e.node.contains(t.target),
            o = i && i.contains(t.target); if (n || o || !this.options.allowClose) {
            let s = t.target.classList.contains(l.CLASS_NEXT_STEP_BTN),
              r = t.target.classList.contains(l.CLASS_PREV_STEP_BTN); t.target.classList.contains(l.CLASS_CLOSE_BTN) ? this.reset() : s ? this.moveNext() : r && this.movePrevious();
          } else this.reset();
        }
      },
    }, { key: 'onResize', value() { this.isActivated && this.overlay.refresh(); } }, { key: 'onKeyUp', value(t) { this.isActivated && (t.keyCode === l.ESC_KEY_CODE && this.options.allowClose ? this.reset() : this.steps.length !== 0 && (t.keyCode === l.RIGHT_KEY_CODE ? this.moveNext() : t.keyCode === l.LEFT_KEY_CODE && this.movePrevious())); } }, { key: 'movePrevious', value() { this.currentStep -= 1, this.steps[this.currentStep] ? this.overlay.highlight(this.steps[this.currentStep]) : this.reset(); } }, { key: 'moveNext', value() { this.currentStep += 1, this.steps[this.currentStep] ? this.overlay.highlight(this.steps[this.currentStep]) : this.reset(); } }, { key: 'hasNextStep', value() { return !!this.steps[this.currentStep + 1]; } }, { key: 'hasPreviousStep', value() { return !!this.steps[this.currentStep - 1]; } }, { key: 'reset', value() { const t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0]; this.currentStep = 0, this.isActivated = !1, this.overlay.clear(t); } }, { key: 'hasHighlightedElement', value() { const t = this.overlay.getHighlightedElement(); return t && t.node; } }, { key: 'getHighlightedElement', value() { return this.overlay.getHighlightedElement(); } }, { key: 'getLastHighlightedElement', value() { return this.overlay.getLastHighlightedElement(); } }, { key: 'defineSteps', value(t) { const e = this; this.steps = [], t.forEach((i, n) => { if (!i.element || typeof i.element !== 'string') throw new Error(`Element (query selector string) missing in step ${n}`); const o = e.prepareElementFromStep(i, t, n); o && e.steps.push(o); }); } }, {
      key: 'prepareElementFromStep',
      value(t) {
        let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
          i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
          o = '',
          s = {}; typeof t === 'string' ? o = t : (o = t.element, s = n({}, this.options, t)); const l = this.document.querySelector(o); if (!l) return console.warn(`Element to highlight ${o} not found`), null; let d = null; if (s.popover && s.popover.description) {
          const u = n({}, this.options, s.popover, {
            totalCount: e.length, currentIndex: i, isFirst: i === 0, isLast: i === e.length - 1,
          }); d = new h.default(u, this.window, this.document);
        } let c = n({}, this.options, s),
          p = new a.default(c, this.window, this.document); return new r.default({
          node: l, options: s, popover: d, stage: p, overlay: this.overlay, window: this.window, document: this.document,
        });
      },
    }, { key: 'start', value() { const t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0; if (!this.steps || this.steps.length === 0) throw new Error('There are no steps defined to iterate'); this.isActivated = !0, this.currentStep = t, this.overlay.highlight(this.steps[t]); } }, { key: 'highlight', value(t) { this.isActivated = !0; const e = this.prepareElementFromStep(t); e && this.overlay.highlight(e); } }]), t;
  }()); e.default = u, t.exports = e.default;
}, function (t, e) {}, function (t, e, i) { i(9), t.exports = i(8); }]))));
// # sourceMappingURL=driver.min.js.map
